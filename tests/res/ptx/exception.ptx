//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-26218862
// Cuda compilation tools, release 10.1, V10.1.168
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_35
.address_size 64

	// .weak	cudaMalloc
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.visible .global .align 1 .b8 sys_output_buffer[1];
.visible .global .align 8 .b8 the_launch_index[8];
.visible .global .align 4 .b8 _ZN21rti_internal_typeinfo16the_launch_indexE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.visible .global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.visible .global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.visible .global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.visible .global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.visible .global .align 1 .b8 _ZN21rti_internal_typename16the_launch_indexE[6] = {117, 105, 110, 116, 50, 0};
.visible .global .align 4 .u32 _ZN21rti_internal_typeenum16the_launch_indexE = 4919;
.visible .global .align 1 .b8 _ZN21rti_internal_semantic16the_launch_indexE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.visible .global .align 1 .b8 _ZN23rti_internal_annotation16the_launch_indexE[1];
.global .align 1 .b8 $str[31] = {85, 115, 101, 114, 32, 101, 120, 99, 101, 112, 116, 105, 111, 110, 32, 37, 100, 32, 97, 116, 32, 40, 37, 100, 44, 32, 37, 100, 41, 10, 0};
.global .align 1 .b8 $str1[33] = {69, 120, 99, 101, 112, 116, 105, 111, 110, 32, 99, 111, 100, 101, 32, 48, 120, 37, 88, 32, 97, 116, 32, 40, 37, 100, 44, 32, 37, 100, 41, 10, 0};

.weak .func  (.param .b32 func_retval0) cudaMalloc(
	.param .b64 cudaMalloc_param_0,
	.param .b64 cudaMalloc_param_1
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 999;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaFuncGetAttributes
.weak .func  (.param .b32 func_retval0) cudaFuncGetAttributes(
	.param .b64 cudaFuncGetAttributes_param_0,
	.param .b64 cudaFuncGetAttributes_param_1
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 999;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaDeviceGetAttribute
.weak .func  (.param .b32 func_retval0) cudaDeviceGetAttribute(
	.param .b64 cudaDeviceGetAttribute_param_0,
	.param .b32 cudaDeviceGetAttribute_param_1,
	.param .b32 cudaDeviceGetAttribute_param_2
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 999;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaGetDevice
.weak .func  (.param .b32 func_retval0) cudaGetDevice(
	.param .b64 cudaGetDevice_param_0
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 999;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaOccupancyMaxActiveBlocksPerMultiprocessor
.weak .func  (.param .b32 func_retval0) cudaOccupancyMaxActiveBlocksPerMultiprocessor(
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_0,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_1,
	.param .b32 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_2,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_3
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 999;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags
.weak .func  (.param .b32 func_retval0) cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_0,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_1,
	.param .b32 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_2,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_3,
	.param .b32 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_4
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 999;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .globl	_Z9exceptionv
.visible .entry _Z9exceptionv(

)
{
	.local .align 8 .b8 	__local_depot6[16];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<4>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<19>;


	mov.u64 	%SPL, __local_depot6;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd2, %SP, 0;
	add.u64 	%rd3, %SPL, 0;
	// inline asm
	call (%r4), _rt_get_exception_code, ();
	// inline asm
	setp.gt.u32	%p1, %r4, 1023;
	ld.global.v2.u32 	{%r5, %r6}, [the_launch_index];
	add.s64 	%rd1, %rd3, 4;
	@%p1 bra 	BB6_3;
	bra.uni 	BB6_1;

BB6_3:
	// inline asm
	call (%r9), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p3, %r9, 0;
	@%p3 bra 	BB6_5;

	add.s32 	%r10, %r4, -1024;
	st.local.u32 	[%rd3], %r10;
	st.local.u32 	[%rd1], %r5;
	st.local.u32 	[%rd1+4], %r6;
	mov.u64 	%rd10, $str;
	cvta.global.u64 	%rd11, %rd10;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd2;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r11, [retval0+0];
	
	//{
	}// Callseq End 1
	bra.uni 	BB6_5;

BB6_1:
	// inline asm
	call (%r7), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p2, %r7, 0;
	@%p2 bra 	BB6_5;

	st.local.u32 	[%rd3], %r4;
	st.local.u32 	[%rd1], %r5;
	st.local.u32 	[%rd1+4], %r6;
	mov.u64 	%rd6, $str1;
	cvta.global.u64 	%rd7, %rd6;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd7;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd2;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r8, [retval0+0];
	
	//{
	}// Callseq End 0

BB6_5:
	ld.global.v2.u32 	{%r14, %r15}, [the_launch_index];
	cvt.u64.u32	%rd14, %r14;
	cvt.u64.u32	%rd15, %r15;
	mov.u64 	%rd18, sys_output_buffer;
	cvta.global.u64 	%rd13, %rd18;
	mov.u32 	%r12, 2;
	mov.u32 	%r13, 16;
	mov.u64 	%rd17, 0;
	// inline asm
	call (%rd12), _rt_buffer_get_64, (%rd13, %r12, %r13, %rd14, %rd15, %rd17, %rd17);
	// inline asm
	mov.f32 	%f1, 0f3F800000;
	mov.f32 	%f2, 0f00000000;
	mov.f32 	%f3, 0f49742400;
	st.v4.f32 	[%rd12], {%f3, %f2, %f3, %f1};
	ret;
}


