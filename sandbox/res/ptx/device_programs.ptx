//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-26907403
// Cuda compilation tools, release 10.1, V10.1.243
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_35
.address_size 64

	// .globl	__closesthit__radiance
.const .align 8 .b8 optix_launch_parameters[72];

.visible .entry __closesthit__radiance(

)
{
	.reg .f32 	%f<49>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<16>;


	// inline asm
	call (%rd1), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	// inline asm
	call (%r1), _optix_read_primitive_idx, ();
	// inline asm
	ld.u64 	%rd2, [%rd1+24];
	mul.wide.s32 	%rd3, %r1, 12;
	add.s64 	%rd4, %rd2, %rd3;
	ld.u32 	%r4, [%rd4];
	ld.u32 	%r5, [%rd4+4];
	ld.u32 	%r6, [%rd4+8];
	ld.u64 	%rd5, [%rd1+16];
	mul.wide.s32 	%rd6, %r4, 12;
	add.s64 	%rd7, %rd5, %rd6;
	mul.wide.s32 	%rd8, %r5, 12;
	add.s64 	%rd9, %rd5, %rd8;
	mul.wide.s32 	%rd10, %r6, 12;
	add.s64 	%rd11, %rd5, %rd10;
	ld.f32 	%f4, [%rd9];
	ld.f32 	%f5, [%rd7];
	sub.f32 	%f6, %f4, %f5;
	ld.f32 	%f7, [%rd9+4];
	ld.f32 	%f8, [%rd7+4];
	sub.f32 	%f9, %f7, %f8;
	ld.f32 	%f10, [%rd9+8];
	ld.f32 	%f11, [%rd7+8];
	sub.f32 	%f12, %f10, %f11;
	ld.f32 	%f13, [%rd11];
	sub.f32 	%f14, %f13, %f5;
	ld.f32 	%f15, [%rd11+4];
	sub.f32 	%f16, %f15, %f8;
	ld.f32 	%f17, [%rd11+8];
	sub.f32 	%f18, %f17, %f11;
	mul.f32 	%f19, %f9, %f18;
	mul.f32 	%f20, %f12, %f16;
	sub.f32 	%f21, %f19, %f20;
	mul.f32 	%f22, %f12, %f14;
	mul.f32 	%f23, %f6, %f18;
	sub.f32 	%f24, %f22, %f23;
	mul.f32 	%f25, %f6, %f16;
	mul.f32 	%f26, %f9, %f14;
	sub.f32 	%f27, %f25, %f26;
	mul.f32 	%f28, %f24, %f24;
	fma.rn.f32 	%f29, %f21, %f21, %f28;
	fma.rn.f32 	%f30, %f27, %f27, %f29;
	sqrt.rn.f32 	%f31, %f30;
	rcp.rn.f32 	%f32, %f31;
	mul.f32 	%f33, %f32, %f21;
	mul.f32 	%f34, %f32, %f24;
	mul.f32 	%f35, %f27, %f32;
	// inline asm
	call (%f1), _optix_get_world_ray_direction_x, ();
	// inline asm
	// inline asm
	call (%f2), _optix_get_world_ray_direction_y, ();
	// inline asm
	// inline asm
	call (%f3), _optix_get_world_ray_direction_z, ();
	// inline asm
	mul.f32 	%f36, %f34, %f2;
	fma.rn.f32 	%f37, %f33, %f1, %f36;
	fma.rn.f32 	%f38, %f35, %f3, %f37;
	abs.f32 	%f39, %f38;
	fma.rn.f32 	%f40, %f39, 0f3F4CCCCD, 0f3E4CCCCD;
	// inline asm
	call (%r2), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r3), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd12, %r2;
	shl.b64 	%rd13, %rd12, 32;
	cvt.u64.u32	%rd14, %r3;
	or.b64  	%rd15, %rd13, %rd14;
	ld.v2.f32 	{%f41, %f42}, [%rd1];
	mul.f32 	%f44, %f40, %f41;
	mul.f32 	%f46, %f40, %f42;
	ld.f32 	%f47, [%rd1+8];
	mul.f32 	%f48, %f40, %f47;
	st.f32 	[%rd15], %f44;
	st.f32 	[%rd15+4], %f46;
	st.f32 	[%rd15+8], %f48;
	ret;
}

	// .globl	__anyhit__radiance
.visible .entry __anyhit__radiance(

)
{



	ret;
}

	// .globl	__miss__radiance
.visible .entry __miss__radiance(

)
{
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<6>;


	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd1, %r1;
	shl.b64 	%rd2, %rd1, 32;
	cvt.u64.u32	%rd3, %r2;
	or.b64  	%rd4, %rd2, %rd3;
	mov.u32 	%r3, 1065353216;
	mov.u64 	%rd5, 1065353216;
	st.u32 	[%rd4+4], %rd5;
	st.u32 	[%rd4], %rd5;
	st.u32 	[%rd4+8], %r3;
	ret;
}

	// .globl	__raygen__render_frame
.visible .entry __raygen__render_frame(

)
{
	.local .align 4 .b8 	__local_depot3[12];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .f32 	%f<58>;
	.reg .b32 	%r<26>;
	.reg .b64 	%rd<10>;


	mov.u64 	%SPL, __local_depot3;
	cvta.local.u64 	%SP, %SPL;
	// inline asm
	call (%r1), _optix_get_launch_index_x, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_launch_index_y, ();
	// inline asm
	add.u64 	%rd2, %SP, 0;
	add.u64 	%rd3, %SPL, 0;
	mov.u32 	%r10, 0;
	st.local.u32 	[%rd3], %r10;
	mov.u64 	%rd4, 0;
	st.local.u32 	[%rd3+8], %rd4;
	st.local.u32 	[%rd3+4], %rd4;
	shr.u64 	%rd5, %rd2, 32;
	cvt.u32.u64	%r11, %rd5;
	cvt.u32.u64	%r12, %rd2;
	cvt.rn.f32.s32	%f10, %r1;
	add.f32 	%f11, %f10, 0f3F000000;
	cvt.rn.f32.s32	%f12, %r2;
	add.f32 	%f13, %f12, 0f3F000000;
	ld.const.v2.u32 	{%r13, %r14}, [optix_launch_parameters+8];
	mov.u32 	%r9, 1;
	cvt.rn.f32.s32	%f14, %r13;
	cvt.rn.f32.s32	%f15, %r14;
	div.rn.f32 	%f16, %f11, %f14;
	div.rn.f32 	%f17, %f13, %f15;
	add.f32 	%f18, %f16, 0fBF000000;
	ld.const.v2.f32 	{%f19, %f20}, [optix_launch_parameters+40];
	ld.const.v2.f32 	{%f23, %f24}, [optix_launch_parameters+48];
	ld.const.v2.f32 	{%f27, %f28}, [optix_launch_parameters+24];
	fma.rn.f32 	%f30, %f18, %f19, %f28;
	ld.const.v2.f32 	{%f31, %f32}, [optix_launch_parameters+32];
	fma.rn.f32 	%f35, %f18, %f20, %f31;
	fma.rn.f32 	%f36, %f18, %f23, %f32;
	add.f32 	%f37, %f17, 0fBF000000;
	ld.const.v2.f32 	{%f38, %f39}, [optix_launch_parameters+56];
	fma.rn.f32 	%f42, %f37, %f24, %f30;
	fma.rn.f32 	%f43, %f37, %f38, %f35;
	fma.rn.f32 	%f44, %f37, %f39, %f36;
	mul.f32 	%f45, %f43, %f43;
	fma.rn.f32 	%f46, %f42, %f42, %f45;
	fma.rn.f32 	%f47, %f44, %f44, %f46;
	sqrt.rn.f32 	%f48, %f47;
	rcp.rn.f32 	%f49, %f48;
	mul.f32 	%f4, %f42, %f49;
	mul.f32 	%f5, %f43, %f49;
	mul.f32 	%f6, %f44, %f49;
	ld.const.u64 	%rd1, [optix_launch_parameters+64];
	ld.const.v2.f32 	{%f50, %f51}, [optix_launch_parameters+16];
	mov.u32 	%r6, 255;
	mov.f32 	%f8, 0f60AD78EC;
	mov.f32 	%f9, 0f00000000;
	// inline asm
	call (%r4, %r5), _optix_trace_2, (%rd1, %f50, %f51, %f27, %f4, %f5, %f6, %f9, %f8, %f9, %r6, %r9, %r10, %r9, %r10, %r11, %r12);
	// inline asm
	ld.local.f32 	%f52, [%rd3];
	mul.f32 	%f53, %f52, 0f437FFD71;
	cvt.rzi.s32.f32	%r17, %f53;
	ld.local.f32 	%f54, [%rd3+4];
	mul.f32 	%f55, %f54, 0f437FFD71;
	cvt.rzi.s32.f32	%r18, %f55;
	ld.local.f32 	%f56, [%rd3+8];
	mul.f32 	%f57, %f56, 0f437FFD71;
	cvt.rzi.s32.f32	%r19, %f57;
	shl.b32 	%r20, %r18, 8;
	shl.b32 	%r21, %r19, 16;
	or.b32  	%r22, %r17, %r20;
	or.b32  	%r23, %r22, %r21;
	or.b32  	%r24, %r23, -16777216;
	mad.lo.s32 	%r25, %r13, %r2, %r1;
	ld.const.u64 	%rd6, [optix_launch_parameters];
	cvta.to.global.u64 	%rd7, %rd6;
	mul.wide.u32 	%rd8, %r25, 4;
	add.s64 	%rd9, %rd7, %rd8;
	st.global.u32 	[%rd9], %r24;
	ret;
}


